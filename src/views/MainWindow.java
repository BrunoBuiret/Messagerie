package views;

/**
 * @author Bruno Buiret (bruno.buiret@etu.univ-lyon1.fr)
 * @author Thomas Arnaud (thomas.arnaud@etu.univ-lyon1.fr)
 * @author Alexis Rabilloud (alexis.rabilloud@etu.univ-lyon1.fr)
 */
public class MainWindow extends javax.swing.JFrame
{
    /**
     * @param args The command line arguments
     */
    public static void main(String args[])
    {
        try
        {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
        }
        catch(ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new MainWindow().setVisible(true);
        });
    }
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow()
    {
        this.initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        toolBar = new javax.swing.JToolBar();
        newMailButton = new javax.swing.JButton();
        synchronizeButton = new javax.swing.JButton();
        synchronizeAllButton = new javax.swing.JButton();
        tabs = new javax.swing.JTabbedPane();
        settingsTab = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        accountsList = new javax.swing.JList<String>();
        serverAddressLabel = new javax.swing.JLabel();
        serverPortLabel = new javax.swing.JLabel();
        serverAddressField = new javax.swing.JTextField();
        serverPortField = new javax.swing.JSpinner();
        userNameLabel = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        useApopField = new javax.swing.JCheckBox();
        deleteAfterDownloadingField = new javax.swing.JCheckBox();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jPanel2 = new AccountTab();
        accountTab1 = new views.AccountTab();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Messagerie");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        newMailButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/mail-pencil.png"))); // NOI18N
        newMailButton.setText("Nouveau message");
        newMailButton.setEnabled(false);
        newMailButton.setFocusable(false);
        newMailButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newMailButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newMailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMailButtonActionPerformed(evt);
            }
        });
        toolBar.add(newMailButton);

        synchronizeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/mail-send-receive.png"))); // NOI18N
        synchronizeButton.setText("Synchroniser");
        synchronizeButton.setEnabled(false);
        synchronizeButton.setFocusable(false);
        synchronizeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        synchronizeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        synchronizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronizeButtonActionPerformed(evt);
            }
        });
        toolBar.add(synchronizeButton);

        synchronizeAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/mail-send-receive.png"))); // NOI18N
        synchronizeAllButton.setText("Synchroniser tout");
        synchronizeAllButton.setFocusable(false);
        synchronizeAllButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        synchronizeAllButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(synchronizeAllButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(toolBar, gridBagConstraints);

        tabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsStateChanged(evt);
            }
        });

        java.awt.GridBagLayout settingsTabLayout = new java.awt.GridBagLayout();
        settingsTabLayout.columnWidths = new int[] {0, 5, 0, 5, 0};
        settingsTabLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        settingsTab.setLayout(settingsTabLayout);

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0};
        jPanel1.setLayout(jPanel1Layout);

        jLabel5.setLabelFor(jTextField3);
        jLabel5.setText("Dossier de stockage des ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jTextField3, gridBagConstraints);

        browseButton.setText("Parcourir");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel1.add(browseButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        settingsTab.add(jPanel1, gridBagConstraints);

        accountsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Compte #1", "Compte #2", "Compte #3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(accountsList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        settingsTab.add(jScrollPane1, gridBagConstraints);

        serverAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        serverAddressLabel.setLabelFor(serverAddressField);
        serverAddressLabel.setText("Adresse du serveur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        settingsTab.add(serverAddressLabel, gridBagConstraints);

        serverPortLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        serverPortLabel.setLabelFor(serverPortField);
        serverPortLabel.setText("Port du serveur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        settingsTab.add(serverPortLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        settingsTab.add(serverAddressField, gridBagConstraints);

        serverPortField.setModel(new javax.swing.SpinnerNumberModel(110, 0, 65535, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        settingsTab.add(serverPortField, gridBagConstraints);

        userNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        userNameLabel.setLabelFor(userNameField);
        userNameLabel.setText("Nom d'utilisateur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        settingsTab.add(userNameLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        settingsTab.add(userNameField, gridBagConstraints);

        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        passwordLabel.setLabelFor(passwordField);
        passwordLabel.setText("Mot de passe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        settingsTab.add(passwordLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        settingsTab.add(passwordField, gridBagConstraints);

        useApopField.setText("Utiliser APOP plutôt que USER et PASS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        settingsTab.add(useApopField, gridBagConstraints);

        deleteAfterDownloadingField.setText("Supprimer les messages après les avoir récupérés");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        settingsTab.add(deleteAfterDownloadingField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        settingsTab.add(filler1, gridBagConstraints);

        tabs.addTab("Paramètres", settingsTab);

        jPanel2.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        jPanel2.add(accountTab1, gridBagConstraints);

        tabs.addTab("tab2", jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 3, 3);
        getContentPane().add(tabs, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabsStateChanged
        int selectedTabIndex = this.tabs.getSelectedIndex();
        
        System.out.println(selectedTabIndex);
        
        if(selectedTabIndex >= 1)
        {
            // An account tab has been selected
            this.newMailButton.setEnabled(true);
            this.synchronizeButton.setEnabled(true);
            
            // Update window title
            // this.setTitle(this.WINDOW_TITLE + " " + accountName);
        }
        else
        {
            // This isn't an account tab
            this.newMailButton.setEnabled(false);
            this.synchronizeButton.setEnabled(false);
            
            // Update window title
            // this.setTitle(this.WINDOW_TITLE);
        }
    }//GEN-LAST:event_tabsStateChanged

    private void synchronizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronizeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronizeButtonActionPerformed

    private void newMailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMailButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newMailButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private views.AccountTab accountTab1;
    private javax.swing.JList<String> accountsList;
    private javax.swing.JButton browseButton;
    private javax.swing.JCheckBox deleteAfterDownloadingField;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton newMailButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField serverAddressField;
    private javax.swing.JLabel serverAddressLabel;
    private javax.swing.JSpinner serverPortField;
    private javax.swing.JLabel serverPortLabel;
    private javax.swing.JPanel settingsTab;
    private javax.swing.JButton synchronizeAllButton;
    private javax.swing.JButton synchronizeButton;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JCheckBox useApopField;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
